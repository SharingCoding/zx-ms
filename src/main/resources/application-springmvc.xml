<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd ">


	<!-- 扫描Controller -->
	<context:component-scan base-package="com.single.pro.web" />

	<!-- 启用Spring mvc 注解 -->
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<!-- 配置FreeMarker的模板路径 -->
	<bean class="com.single.pro.shiro.tag.SingleShiroTagConfigurer">
		<property name="templateLoaderPath" value="WEB-INF/ftl/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">#</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="auto_import"></prop>
			</props>
		</property>
	</bean>

	<!-- Freemarker视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<!-- 此变量值为pageContext.request, 页面使用方法：rc.contextPath -->
		<property name="requestContextAttribute" value="rc" />
	</bean>

	<!--采用以下配置支持controller中返回String，否则会当成是视图名称和路劲处理 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- String结果数据支持，此解析器要放在JSON解析器前 -->
				<ref bean="stringHttpMessageConverter" />
				<!-- JSON结果数据支持(使用fastjson) -->
				<ref bean="fastJsonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- String转化器 -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- JSON转化器(jackson版本) -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="objectMapper">
			<bean class="com.fasterxml.jackson.databind.ObjectMapper">
				<property name="dateFormat">
					<bean class="java.text.SimpleDateFormat">
						<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
					</bean>
				</property>
				<property name="serializationInclusion">
					<!-- 注入枚举类型,过滤对象，这样JSON中不会输出null -->
					<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
				</property>
			</bean>
		</property>
		<property name="supportedMediaTypes">
			<list>
				<!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- JSON转化器(fastjson版本) -->
	<bean id="fastJsonHttpMessageConverter"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
		<property name="supportedMediaTypes">
			<list>
				<!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
		<property name="fastJsonConfig">
			<bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
				<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss" />
				<property name="serializerFeatures">
					<array>
						<!--此配置用于将Date类型转化为dateFormat对应的格式 -->
						<value>WriteDateUseDateFormat</value>
					</array>
				</property>
			</bean>
		</property>
	</bean>

	<!-- 文件上传配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="209715200" />
	</bean>

	<mvc:interceptors>
		<!-- 用户UA验证拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.single.pro.interceptor.UserAgentHandlerInterceptor" />
		</mvc:interceptor>
		<!-- 用户Token验证拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.single.pro.interceptor.AuthHandlerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!--图片验证码配置 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<!-- 是否有边框 -->
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.session.key">kaptcha_code</prop>
						<!-- 验证码字体大小 -->
						<prop key="kaptcha.textproducer.font.size">24</prop>
						<!-- 验证码个数 -->
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<!-- 验证码字体颜色 -->
						<prop key="kaptcha.textproducer.font.color">73,73,73</prop>
						<!-- 验证码所属字体样式 -->
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
						<!-- 验证码文本字符间距 -->
						<prop key="kaptcha.textproducer.char.space">3</prop>
						<!-- 验证码宽度 -->
						<prop key="kaptcha.image.width">120</prop>
						<!-- 验证码高度 -->
						<prop key="kaptcha.image.height">42</prop>
						<!-- 背景颜色渐变， 开始颜色 -->
						<prop key="kaptcha.background.clear.from">225,230,246</prop>
						<!-- 背景颜色渐变， 结束颜色 -->
						<prop key="kaptcha.background.clear.to">235,235,235</prop>
						<!-- 干扰线颜色 -->
						<prop key="kaptcha.noise.color">255,255,255</prop>
						<!-- 干扰线实现类 -->
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.DefaultNoise</prop>
						<!-- 文本实现类 -->
						<prop key="kaptcha.textproducer.impl">com.google.code.kaptcha.text.impl.DefaultTextCreator
						</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

</beans>
